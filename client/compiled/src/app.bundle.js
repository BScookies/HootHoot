webpackJsonp([0,1],[function(t,e,n){n(1),n(2),n(3),n(4),n(5),n(6),n(7),n(8),n(9),n(10),n(11),n(12),n(13),n(14),n(15),t.exports=n(16)},function(t,e){angular.module("chatformdirective",["theApp"]).directive("chatform",function(){return{restrict:"E",replace:!0,templateUrl:"app/components/chat-form/chat-form.html",controller:function(t,e,n,o,r,c){t.senderId=c.getCurrentUserId(),t.selections=r.selections,t.messageText="",navigator.geolocation.getCurrentPosition(function(e){t.loadWeather(e.coords.latitude+","+e.coords.longitude)}),t.loadWeather=function(t,e){$.simpleWeather({location:t,woeid:e,unit:"f",success:function(t){html='<h2 id="temp"><i class="icon-'+t.code+'"></i> '+t.temp+"&deg;"+t.units.temp+"</h2>",$("#weather").html(html)},error:function(t){$("#weather").html("<p>"+t+"</p>")}})},t.sendMessage=function(){t.messageText.match(/\/weather/)&&(t.messageText=document.getElementById("temp").innerHTML.split("</i> ")[1]),o.sendMessage(t.senderId,t.selections.recipient.id,t.messageText),t.messageText=""}}}})},function(t,e){angular.module("chatlistdirective",["theApp","luegg.directives"]).directive("chatlist",function(){return{restrict:"E",replace:!0,templateUrl:"app/components/chat-list/chat-list.html",scope:{list:"=chatlist"},link:function(t,e){t.$watchCollection("list",function(){var t=e.find(".chatScroll"),n=t.prop("scrollHeight");t.prop("scrollTop",n)})},controller:function(t,e,n,o,r){e.chats=[],e.selections=o.selections,e.getRecentMessages=function(){n.getRecentMessages()},e.$watch(function(){return n.chats},function(t){e.chats=t},!0),r.$on("get message",function(t,e){n.addMessageToList(e)}),e.filterById=function(t){if(o.selections.recipient){var e=o.selections.recipient.id;return t.recipientId===e||t.senderId===e}}}}})},function(t,e){angular.module("chatsingledirective",["theApp"]).directive("chatsingle",function(t){return{restrict:"E",templateUrl:"app/components/chat-single/chat-single.html",scope:{sender:"@",body:"@",date:"@",type:"@"}}})},function(t,e){angular.module("contactlistdirective",["theApp"]).directive("contactlist",function(){return{restrict:"E",templateUrl:"app/components/contact-list/contact-list.html",scope:{},controller:function(t,e,n,o){e.contacts=n.contacts,e.addContact=function(t){n.createContact(t)},e.getAllContacts=function(){n.getAllContacts()},e.deleteContact=function(t){n.deleteContact(t)},e.setSelectedRecipient=function(t){o.setSelectedRecipient(t)}}}})},function(t,e){angular.module("contactsingledirective",["theApp"]).directive("contactsingle",function(t){return{restrict:"E",templateUrl:"app/components/contact-single/contact-single.html",scope:{name:"@",channel:"@",isactive:"@"}}})},function(t,e){angular.module("grouplistdirective",["theApp"]).directive("grouplist",function(){return{restrict:"E",templateUrl:"app/components/group-list/group-list.html",controller:function(t,e,n){e.click=!1,e.groupFriends=[],e.searchGroupFriends=n.searchGroupFriends,e.showGroup=function(){e.click=!0},e.sendGroup=function(){n.sendGroup(e.addGroupNames,e.groupFriends)},e.createGroup=function(t){e.groupFriends.push(t)},e.findContacts=function(){n.findContacts()},e.AddContact=function(){n.AddContact()}}}})},function(t,e){angular.module("groupsingledirective",["theApp"]).directive("groupsingle",function(t){return{restrict:"E",templateUrl:"app/components/group-single/group-single.html",scope:{name:"@",channel:"@",status:"@"}}})},function(t,e){!function(){"use strict";angular.module("services",[])}()},function(t,e){!function(){"use strict";function t(t,e){function n(){return+localStorage.getItem("userId")}function o(){return t.get("/contacts").then(i)["catch"](a("getContacts"))}function r(e){return t.post("/contacts",{newContactEmail:e}).then(i)["catch"](a("createContact"))}function c(){return t.get("/message").then(i)["catch"](a("getRecentMessages"))}function i(t){return t.data}function a(t){return function(n){e("An error has occured in "+t+".\nHTTP error: "+n+" ("+n+")")}}var s={getCurrentUserId:n,getRecentMessages:c,getContacts:o,createContact:r};return s}angular.module("services").factory("DataService",t),t.$inject=["$http","$exceptionHandler"]}()},function(t,e){!function(){"use strict";function t(){function t(t){e.selections.recipient=t}var e={selections:{},setSelectedRecipient:t};return e}angular.module("services").factory("Globals",t)}()},function(t,e){!function(){"use strict";function t(t,e){function n(e){e.on("get message",function(e){t.$apply(function(){t.$broadcast("get message",e)})})}function o(t){i.emit("send message",t)}function r(){i=io.connect(),n(i),i.emit("registered",e.getCurrentUserId())}var c={addListeners:n,sendMessage:o,register:r};return c;var i}angular.module("services").factory("SocketService",t),t.$inject=["$rootScope","DataService"]}()},function(t,e){!function(){"use strict";function t(t){function e(e){t.createContact(e).then(r)}function n(){function e(t){t.forEach(r)}t.getContacts().then(e)}function o(e){t.deleteContact(e).then(c)}function r(t){i.contacts.push(t)}function c(t){for(var e=0;e<i.contacts.length;e++)if(i.contacts[e].id===t)return i.contacts.splice(e,1)[0]}var i={contacts:[],createContact:e,getAllContacts:n,deleteContact:o};return i}angular.module("services").factory("ContactService",t),t.$inject=["DataService"]}()},function(t,e){!function(){"use strict";function t(t,e){function n(){function t(t){t.forEach(r)}e.getRecentMessages().then(t)}function o(e,n,o){var r={senderId:e,recipientId:n,body:o,recipientType:"U"};t.sendMessage(r)}function r(t){c.chats.push(t)}var c={chats:[],sendMessage:o,getRecentMessages:n,addMessageToList:r};return c}angular.module("services").factory("MessageService",t),t.$inject=["SocketService","DataService"]}()},function(t,e){var n=angular.module("theApp",["auth0","angular-storage","angular-jwt","ngRoute","loginController","signupController","chatformdirective","chatsingledirective","chatlistdirective","userpicdirective","contactsingledirective","contactlistdirective","groupsingledirective","grouplistdirective","services","mainCtrl"]);n.config(["$routeProvider","authProvider","$httpProvider","$locationProvider","jwtInterceptorProvider",function(t,e,n,o,r){t.when("/",{templateUrl:"login/login.html",controller:"loginController"}).when("/signup",{templateUrl:"signup/signup.html",controller:"signupController"}).when("/chat",{templateUrl:"app/views/chat.html",controller:"signupController"}),e.init({domain:"jeffreylamwork.auth0.com",clientID:"RdSGwryXzBL0bEHYoPasF9KX0hMwROjN",loginUrl:"/"}),e.on("loginSuccess",["$location","$http","profilePromise","idToken","store","SocketService",function(t,e,n,o,r,c){console.log("Login Success"),n.then(function(n){r.set("profile",n),r.set("token",o),t.path("/chat");var c=JSON.parse(window.localStorage.profile).name.split(" ");return e({method:"POST",url:"/auth",data:{email:JSON.parse(window.localStorage.profile).email,firstname:c[0],lastname:c[1]}}).then(function(e){e.data.token?(sessionStorage.setItem("token",e.data.token),localStorage.setItem("userId",e.data.id)):t.path("/")}).then(function(){t.path("/chat")})})}]),e.on("loginFailure",function(t){alert("Error"),t.path("/")}),n.interceptors.push("jwtInterceptor"),n.interceptors.push("AttachTokens")}]),angular.module("mainCtrl",["theApp"]).controller("mainCtrl",function(t,e,n,o){t.logout=function(){e.localStorage.removeItem("token"),e.sessionStorage.removeItem("token"),e.localStorage.removeItem("profile"),e.localStorage.removeItem("username"),e.localStorage.removeItem("userId"),e.localStorage.removeItem("recipient"),e.localStorage.removeItem("email"),e.location.href="/"}}),n.value("currentUser",Math.floor(1e6*Math.random())),n.factory("checker",function(t,e,n){var o=function(){return!!n.sessionStorage.getItem("token")};return{isAuth:o}}),n.factory("AttachTokens",function(t){var e={request:function(e){var n=t.sessionStorage.getItem("token");return n&&(e.headers["x-access-token"]=n),e.headers["Allow-Control-Allow-Origin"]="*",e}};return e}).run(function(t,e,n,o,r,c){var i=c.get("profile");i?i.nickname:o.localStorage.getItem("userId");n.isAuth()&&r.register(),t.$on("$routeChangeStart",function(t,o,r){"/"==e.path()||"/signup"==e.path()?console.log("This page does not need authentication"):n.isAuth()||(console.log("not authenticated"),e.path("/"))})}),n.run(["auth",function(t){t.hookEvents()}])},function(t,e){angular.module("loginController",["theApp"]).controller("loginController",["$scope","$http","auth","$location","$window","SocketService",function(t,e,n,o,r,c){t.auth=n,t.login=function(n,i){return e({method:"POST",url:"/",data:{email:n,password:i}}).then(function(e){e.data.token?(r.sessionStorage.setItem("token",e.data.token),r.localStorage.setItem("token",e.data.token),r.localStorage.setItem("userId",e.data.id),r.localStorage.setItem("email",e.data.email),t.id=r.localStorage.getItem("userId"),c.register(),o.path("/chat")):o.path("/")})}}])},function(t,e){angular.module("signupController",["theApp"]).controller("signupController",function(t,e,n,o){t.signUp=function(t,e,n,r,c){o({method:"POST",url:"/signup",data:{firstname:t,lastname:e,email:r,password:c}}),console.log("sent post req from signup controller")}})}]);